mixin donut( { variables, total, number, text, captions } ) 
  //- переменные
  - let strokeWidth = 1
  - let offset = firstDisplacementValue = 25;
  - let totalLength = 0
  - let radius = 15.91549430918954
  figure.donut
    .donut__container
      svg.donut__svg(width="100%" height="100%" viewBox="0 0 42 42")
        //- заготовка
        circle.donut-hole(cx="21" cy="21" r=radius fill="#fff")
        circle.gonut-ring(cx="21" cy="21" r=radius fill="transparent" stroke="#d2d3d4" stroke-width=strokeWidth)
        
        //- сегменты
        each item, key in variables
          //- цвет сегмента
          defs 
            linearGradient(id="Gradient" + key x1="0" x2="0" y1="0" y2="1")
              stop(offset="0%" stop-color=item.color[0])
              stop(offset="100%" stop-color=item.color[1])

          - let dashLength = 100 - item.value
          circle.donut-segment(cx="21" cy="21" r=radius fill="transparent" stroke=`url(#Gradient${key})` stroke-width=strokeWidth stroke-dasharray=`${item.value} ${dashLength}` stroke-dashoffset=offset)
          - totalLength += item.value 
          - offset = 100 - totalLength + firstDisplacementValue

        //- засечки
        - totalLength = 0
        each item in variables
          - totalLength += item.value 
          - let a = totalLength / radius 
          - let b = ( Math.PI - a ) / 2
          - let o = ( Math.PI / 2 ) - b
          - let c = Math.PI - ( Math.PI / 2 ) - o
          - let chord = ( radius + 5 ) * Math.sin( a ) / Math.sin( b )
          - let y = chord * Math.sin(o)
          - let x = 21 + chord * Math.sin(c)

          line(x1="21" y1="21" x2=x y2=y stroke="white" stroke-width=1)

        //- текстовая информация внутри диаграммы
        g.donut__info 
          text.donut__number(x="50%" y="50%")=number
          text.donut__text(x="50%" y="50%")=text

    //- информация справа
    figcaption.donut__description
      - let colors = [ "yellow", "green", "violet", "black" ] 
      ul.donut__captions
        each item, key in captions 
          li.donut__caption
            span.donut__marker(class="donut__marker_" + colors[key])
            span=item